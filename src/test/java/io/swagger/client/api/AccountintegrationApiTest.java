/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ModelsCountStat;
import io.swagger.client.model.ModelsDeleteResponse;
import io.swagger.client.model.ModelsEIntegration;
import io.swagger.client.model.ModelsIntegration;
import io.swagger.client.model.ModelsRGlockappsMonitorStat;
import io.swagger.client.model.ModelsResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountintegrationApi
 */
@Ignore
public class AccountintegrationApiTest {

    private final AccountintegrationApi api = new AccountintegrationApi();

    
    /**
     * 
     *
     * Count Total AccountIntegrations
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIntegrationRouterCountTest() throws ApiException {
        String xAccountApiKey = null;
        ModelsCountStat response = api.accountIntegrationRouterCount(xAccountApiKey);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Create Integration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIntegrationRouterCreateTest() throws ApiException {
        String xAccountApiKey = null;
        String itype = null;
        ModelsEIntegration body = null;
        ModelsIntegration response = api.accountIntegrationRouterCreate(xAccountApiKey, itype, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete Integration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIntegrationRouterDeleteTest() throws ApiException {
        String xAccountApiKey = null;
        String itype = null;
        ModelsDeleteResponse response = api.accountIntegrationRouterDelete(xAccountApiKey, itype);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Disable IP Monitoring for a single IP
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIntegrationRouterDisableGlockappsIPMonitoringTest() throws ApiException {
        String xAccountApiKey = null;
        Long ipid = null;
        ModelsDeleteResponse response = api.accountIntegrationRouterDisableGlockappsIPMonitoring(xAccountApiKey, ipid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Enable IP Monitoring for a single IP
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIntegrationRouterEnableGlockappsIPMonitoringTest() throws ApiException {
        String xAccountApiKey = null;
        Long ipid = null;
        ModelsResponse response = api.accountIntegrationRouterEnableGlockappsIPMonitoring(xAccountApiKey, ipid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get All Integrations
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIntegrationRouterGetAllTest() throws ApiException {
        String xAccountApiKey = null;
        List<ModelsIntegration> response = api.accountIntegrationRouterGetAll(xAccountApiKey);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get Monitored IP Stats
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIntegrationRouterGetMonitoredIPStatsTest() throws ApiException {
        String xAccountApiKey = null;
        Long ipid = null;
        String from = null;
        String to = null;
        List<ModelsRGlockappsMonitorStat> response = api.accountIntegrationRouterGetMonitoredIPStats(xAccountApiKey, ipid, from, to);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Update Integration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIntegrationRouterUpdateTest() throws ApiException {
        String xAccountApiKey = null;
        String itype = null;
        ModelsEIntegration body = null;
        ModelsIntegration response = api.accountIntegrationRouterUpdate(xAccountApiKey, itype, body);

        // TODO: test validations
    }
    
}
