/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ModelsAccountIPPool;
import io.swagger.client.model.ModelsCountStat;
import io.swagger.client.model.ModelsDeleteResponse;
import io.swagger.client.model.ModelsEIPPool;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountippoolApi
 */
@Ignore
public class AccountippoolApiTest {

    private final AccountippoolApi api = new AccountippoolApi();

    
    /**
     * 
     *
     * Count Total AccountIPPools
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIPPoolRouterCountTest() throws ApiException {
        String xAccountApiKey = null;
        ModelsCountStat response = api.accountIPPoolRouterCount(xAccountApiKey);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Create AccountIPPool
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIPPoolRouterCreateTest() throws ApiException {
        String xAccountApiKey = null;
        ModelsEIPPool body = null;
        ModelsAccountIPPool response = api.accountIPPoolRouterCreate(xAccountApiKey, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete AccountIPPool
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIPPoolRouterDeleteTest() throws ApiException {
        String xAccountApiKey = null;
        Long ippoolid = null;
        ModelsDeleteResponse response = api.accountIPPoolRouterDelete(xAccountApiKey, ippoolid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Find AccountIPPool by AccountIPPoolId
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIPPoolRouterGetTest() throws ApiException {
        String xAccountApiKey = null;
        Long ippoolid = null;
        ModelsAccountIPPool response = api.accountIPPoolRouterGet(xAccountApiKey, ippoolid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get All AccountIPPools
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIPPoolRouterGetAllTest() throws ApiException {
        String xAccountApiKey = null;
        Long offset = null;
        Long limit = null;
        String search = null;
        List<ModelsAccountIPPool> response = api.accountIPPoolRouterGetAll(xAccountApiKey, offset, limit, search);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Update AccountIPPool
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountIPPoolRouterUpdateTest() throws ApiException {
        String xAccountApiKey = null;
        Long ippoolid = null;
        ModelsEIPPool body = null;
        ModelsAccountIPPool response = api.accountIPPoolRouterUpdate(xAccountApiKey, ippoolid, body);

        // TODO: test validations
    }
    
}
