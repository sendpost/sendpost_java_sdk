/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ModelsCountStat;
import io.swagger.client.model.ModelsDeleteResponse;
import io.swagger.client.model.ModelsEIPPool;
import io.swagger.client.model.ModelsIPPool;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubaccountippoolApi
 */
@Ignore
public class SubaccountippoolApiTest {

    private final SubaccountippoolApi api = new SubaccountippoolApi();

    
    /**
     * 
     *
     * Count Total IPPools
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void iPPoolRouterCountTest() throws ApiException {
        String xSubAccountApiKey = null;
        ModelsCountStat response = api.iPPoolRouterCount(xSubAccountApiKey);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Create IPPool
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void iPPoolRouterCreateTest() throws ApiException {
        String xSubAccountApiKey = null;
        ModelsEIPPool body = null;
        ModelsIPPool response = api.iPPoolRouterCreate(xSubAccountApiKey, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete IPPool
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void iPPoolRouterDeleteTest() throws ApiException {
        String xSubAccountApiKey = null;
        Long ippoolid = null;
        ModelsDeleteResponse response = api.iPPoolRouterDelete(xSubAccountApiKey, ippoolid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Find IPPool by IPPoolId
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void iPPoolRouterGetTest() throws ApiException {
        String xSubAccountApiKey = null;
        Long ippoolid = null;
        ModelsIPPool response = api.iPPoolRouterGet(xSubAccountApiKey, ippoolid);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get All IPPools
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void iPPoolRouterGetAllTest() throws ApiException {
        String xSubAccountApiKey = null;
        Long offset = null;
        Long limit = null;
        String search = null;
        List<ModelsIPPool> response = api.iPPoolRouterGetAll(xSubAccountApiKey, offset, limit, search);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Update IPPool
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void iPPoolRouterUpdateTest() throws ApiException {
        String xSubAccountApiKey = null;
        Long ippoolid = null;
        ModelsEIPPool body = null;
        ModelsIPPool response = api.iPPoolRouterUpdate(xSubAccountApiKey, ippoolid, body);

        // TODO: test validations
    }
    
}
