/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ModelsSMTPStat;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountsmtpstatApi
 */
@Ignore
public class AccountsmtpstatApiTest {

    private final AccountsmtpstatApi api = new AccountsmtpstatApi();

    
    /**
     * 
     *
     * Get All Aggregate IP Provider SMTP Stats
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sMTPStatRouterGetAllAggregateIPProviderSMTPStatsTest() throws ApiException {
        String xAccountApiKey = null;
        Long ipid = null;
        String pname = null;
        String from = null;
        String to = null;
        List<ModelsSMTPStat> response = api.sMTPStatRouterGetAllAggregateIPProviderSMTPStats(xAccountApiKey, ipid, pname, from, to);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get All Aggregate IP SMTP Stats
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sMTPStatRouterGetAllAggregateIPSMTPStatsTest() throws ApiException {
        String xAccountApiKey = null;
        Long ipid = null;
        String from = null;
        String to = null;
        List<ModelsSMTPStat> response = api.sMTPStatRouterGetAllAggregateIPSMTPStats(xAccountApiKey, ipid, from, to);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get All Aggregate IP SMTP Stats For SubAccount
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sMTPStatRouterGetAllAggregateIPSMTPStatsForSubAccountTest() throws ApiException {
        String xAccountApiKey = null;
        Long ipid = null;
        Long sid = null;
        String from = null;
        String to = null;
        List<ModelsSMTPStat> response = api.sMTPStatRouterGetAllAggregateIPSMTPStatsForSubAccount(xAccountApiKey, ipid, sid, from, to);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get All Aggregate SubAccount Provider SMTP Stats
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sMTPStatRouterGetAllAggregateSubAccountProviderSMTPStatsTest() throws ApiException {
        String xAccountApiKey = null;
        Long sid = null;
        String pname = null;
        String from = null;
        String to = null;
        List<ModelsSMTPStat> response = api.sMTPStatRouterGetAllAggregateSubAccountProviderSMTPStats(xAccountApiKey, sid, pname, from, to);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get All Aggregate SubAccount SMTP Stats
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sMTPStatRouterGetAllAggregateSubAccountSMTPStatsTest() throws ApiException {
        String xAccountApiKey = null;
        Long sid = null;
        String from = null;
        String to = null;
        List<ModelsSMTPStat> response = api.sMTPStatRouterGetAllAggregateSubAccountSMTPStats(xAccountApiKey, sid, from, to);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get All Aggregate SubAccount SMTP Stats For IP
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sMTPStatRouterGetAllAggregateSubAccountSMTPStatsForIPTest() throws ApiException {
        String xAccountApiKey = null;
        Long sid = null;
        Long ipid = null;
        String from = null;
        String to = null;
        List<ModelsSMTPStat> response = api.sMTPStatRouterGetAllAggregateSubAccountSMTPStatsForIP(xAccountApiKey, sid, ipid, from, to);

        // TODO: test validations
    }
    
}
