/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ModelsDeleteResponse;
import io.swagger.client.model.ModelsEInvitation;
import io.swagger.client.model.ModelsInvitation;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountinvitationApi
 */
@Ignore
public class AccountinvitationApiTest {

    private final AccountinvitationApi api = new AccountinvitationApi();

    
    /**
     * 
     *
     * Create Invitation
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invitationRouterCreateTest() throws ApiException {
        String xAccountApiKey = null;
        ModelsEInvitation body = null;
        ModelsInvitation response = api.invitationRouterCreate(xAccountApiKey, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete Invitation
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invitationRouterDeleteTest() throws ApiException {
        String xAccountApiKey = null;
        Long invitationId = null;
        ModelsDeleteResponse response = api.invitationRouterDelete(xAccountApiKey, invitationId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get All Invitations
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invitationRouterGetAllTest() throws ApiException {
        String xAccountApiKey = null;
        List<ModelsInvitation> response = api.invitationRouterGetAll(xAccountApiKey);

        // TODO: test validations
    }
    
}
