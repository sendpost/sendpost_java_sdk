/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ModelsAlertLabel;
import io.swagger.client.model.ModelsMember;
import io.swagger.client.model.ModelsPriority;
import java.io.IOException;

/**
 * ModelsAlert
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-10-28T07:50:19.455Z")



public class ModelsAlert {
  @SerializedName("Condition")
  private String condition = null;

  @SerializedName("Notification")
  private String notification = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("alert_name")
  private String alertName = null;

  @SerializedName("created")
  private Long created = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("label")
  private ModelsAlertLabel label = null;

  @SerializedName("member")
  private ModelsMember member = null;

  @SerializedName("priority")
  private ModelsPriority priority = null;

  @SerializedName("updated")
  private Long updated = null;

  public ModelsAlert condition(String condition) {
    this.condition = condition;
    return this;
  }

   /**
   * Get condition
   * @return condition
  **/
  @ApiModelProperty(value = "")
  public String getCondition() {
    return condition;
  }

  public void setCondition(String condition) {
    this.condition = condition;
  }

  public ModelsAlert notification(String notification) {
    this.notification = notification;
    return this;
  }

   /**
   * Get notification
   * @return notification
  **/
  @ApiModelProperty(value = "")
  public String getNotification() {
    return notification;
  }

  public void setNotification(String notification) {
    this.notification = notification;
  }

  public ModelsAlert active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public ModelsAlert alertName(String alertName) {
    this.alertName = alertName;
    return this;
  }

   /**
   * Get alertName
   * @return alertName
  **/
  @ApiModelProperty(value = "")
  public String getAlertName() {
    return alertName;
  }

  public void setAlertName(String alertName) {
    this.alertName = alertName;
  }

  public ModelsAlert created(Long created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public Long getCreated() {
    return created;
  }

  public void setCreated(Long created) {
    this.created = created;
  }

  public ModelsAlert id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ModelsAlert label(ModelsAlertLabel label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @ApiModelProperty(value = "")
  public ModelsAlertLabel getLabel() {
    return label;
  }

  public void setLabel(ModelsAlertLabel label) {
    this.label = label;
  }

  public ModelsAlert member(ModelsMember member) {
    this.member = member;
    return this;
  }

   /**
   * Get member
   * @return member
  **/
  @ApiModelProperty(value = "")
  public ModelsMember getMember() {
    return member;
  }

  public void setMember(ModelsMember member) {
    this.member = member;
  }

  public ModelsAlert priority(ModelsPriority priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @ApiModelProperty(value = "")
  public ModelsPriority getPriority() {
    return priority;
  }

  public void setPriority(ModelsPriority priority) {
    this.priority = priority;
  }

  public ModelsAlert updated(Long updated) {
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @ApiModelProperty(value = "")
  public Long getUpdated() {
    return updated;
  }

  public void setUpdated(Long updated) {
    this.updated = updated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsAlert modelsAlert = (ModelsAlert) o;
    return Objects.equals(this.condition, modelsAlert.condition) &&
        Objects.equals(this.notification, modelsAlert.notification) &&
        Objects.equals(this.active, modelsAlert.active) &&
        Objects.equals(this.alertName, modelsAlert.alertName) &&
        Objects.equals(this.created, modelsAlert.created) &&
        Objects.equals(this.id, modelsAlert.id) &&
        Objects.equals(this.label, modelsAlert.label) &&
        Objects.equals(this.member, modelsAlert.member) &&
        Objects.equals(this.priority, modelsAlert.priority) &&
        Objects.equals(this.updated, modelsAlert.updated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(condition, notification, active, alertName, created, id, label, member, priority, updated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsAlert {\n");
    
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    notification: ").append(toIndentedString(notification)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    alertName: ").append(toIndentedString(alertName)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    member: ").append(toIndentedString(member)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

