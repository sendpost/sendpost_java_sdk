/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ModelsIEIP;
import io.swagger.client.model.ModelsIEMember;
import io.swagger.client.model.ModelsIESubAccount;
import io.swagger.client.model.ModelsIETag;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ModelsEIncident
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-27T05:08:14.940Z")



public class ModelsEIncident {
  @SerializedName("author")
  private ModelsIEMember author = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("relatedIP")
  private ModelsIEIP relatedIP = null;

  @SerializedName("relatedSubAccount")
  private ModelsIESubAccount relatedSubAccount = null;

  @SerializedName("status")
  private Long status = null;

  @SerializedName("summary")
  private String summary = null;

  @SerializedName("tags")
  private List<ModelsIETag> tags = null;

  public ModelsEIncident author(ModelsIEMember author) {
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @ApiModelProperty(value = "")
  public ModelsIEMember getAuthor() {
    return author;
  }

  public void setAuthor(ModelsIEMember author) {
    this.author = author;
  }

  public ModelsEIncident description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ModelsEIncident relatedIP(ModelsIEIP relatedIP) {
    this.relatedIP = relatedIP;
    return this;
  }

   /**
   * Get relatedIP
   * @return relatedIP
  **/
  @ApiModelProperty(value = "")
  public ModelsIEIP getRelatedIP() {
    return relatedIP;
  }

  public void setRelatedIP(ModelsIEIP relatedIP) {
    this.relatedIP = relatedIP;
  }

  public ModelsEIncident relatedSubAccount(ModelsIESubAccount relatedSubAccount) {
    this.relatedSubAccount = relatedSubAccount;
    return this;
  }

   /**
   * Get relatedSubAccount
   * @return relatedSubAccount
  **/
  @ApiModelProperty(value = "")
  public ModelsIESubAccount getRelatedSubAccount() {
    return relatedSubAccount;
  }

  public void setRelatedSubAccount(ModelsIESubAccount relatedSubAccount) {
    this.relatedSubAccount = relatedSubAccount;
  }

  public ModelsEIncident status(Long status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public Long getStatus() {
    return status;
  }

  public void setStatus(Long status) {
    this.status = status;
  }

  public ModelsEIncident summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @ApiModelProperty(value = "")
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }

  public ModelsEIncident tags(List<ModelsIETag> tags) {
    this.tags = tags;
    return this;
  }

  public ModelsEIncident addTagsItem(ModelsIETag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<ModelsIETag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<ModelsIETag> getTags() {
    return tags;
  }

  public void setTags(List<ModelsIETag> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsEIncident modelsEIncident = (ModelsEIncident) o;
    return Objects.equals(this.author, modelsEIncident.author) &&
        Objects.equals(this.description, modelsEIncident.description) &&
        Objects.equals(this.relatedIP, modelsEIncident.relatedIP) &&
        Objects.equals(this.relatedSubAccount, modelsEIncident.relatedSubAccount) &&
        Objects.equals(this.status, modelsEIncident.status) &&
        Objects.equals(this.summary, modelsEIncident.summary) &&
        Objects.equals(this.tags, modelsEIncident.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(author, description, relatedIP, relatedSubAccount, status, summary, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsEIncident {\n");
    
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    relatedIP: ").append(toIndentedString(relatedIP)).append("\n");
    sb.append("    relatedSubAccount: ").append(toIndentedString(relatedSubAccount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

