/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ModelsEventType;
import java.io.IOException;

/**
 * ModelsWMessage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T12:27:02.903Z")



public class ModelsWMessage {
  @SerializedName("AccountID")
  private Long accountID = null;

  @SerializedName("Groups")
  private Object groups = null;

  @SerializedName("IPID")
  private Long IPID = null;

  @SerializedName("MessageType")
  private String messageType = null;

  @SerializedName("MessageUUID")
  private String messageUUID = null;

  @SerializedName("MockMessage")
  private Boolean mockMessage = null;

  @SerializedName("MockTimeShift")
  private Long mockTimeShift = null;

  @SerializedName("SMTPCode")
  private Long smTPCode = null;

  @SerializedName("SMTPDescription")
  private String smTPDescription = null;

  @SerializedName("SubAccountID")
  private Long subAccountID = null;

  @SerializedName("To")
  private String to = null;

  @SerializedName("Type")
  private ModelsEventType type = null;

  public ModelsWMessage accountID(Long accountID) {
    this.accountID = accountID;
    return this;
  }

   /**
   * Get accountID
   * @return accountID
  **/
  @ApiModelProperty(value = "")
  public Long getAccountID() {
    return accountID;
  }

  public void setAccountID(Long accountID) {
    this.accountID = accountID;
  }

  public ModelsWMessage groups(Object groups) {
    this.groups = groups;
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @ApiModelProperty(value = "")
  public Object getGroups() {
    return groups;
  }

  public void setGroups(Object groups) {
    this.groups = groups;
  }

  public ModelsWMessage IPID(Long IPID) {
    this.IPID = IPID;
    return this;
  }

   /**
   * Get IPID
   * @return IPID
  **/
  @ApiModelProperty(value = "")
  public Long getIPID() {
    return IPID;
  }

  public void setIPID(Long IPID) {
    this.IPID = IPID;
  }

  public ModelsWMessage messageType(String messageType) {
    this.messageType = messageType;
    return this;
  }

   /**
   * Get messageType
   * @return messageType
  **/
  @ApiModelProperty(value = "")
  public String getMessageType() {
    return messageType;
  }

  public void setMessageType(String messageType) {
    this.messageType = messageType;
  }

  public ModelsWMessage messageUUID(String messageUUID) {
    this.messageUUID = messageUUID;
    return this;
  }

   /**
   * Get messageUUID
   * @return messageUUID
  **/
  @ApiModelProperty(value = "")
  public String getMessageUUID() {
    return messageUUID;
  }

  public void setMessageUUID(String messageUUID) {
    this.messageUUID = messageUUID;
  }

  public ModelsWMessage mockMessage(Boolean mockMessage) {
    this.mockMessage = mockMessage;
    return this;
  }

   /**
   * Get mockMessage
   * @return mockMessage
  **/
  @ApiModelProperty(value = "")
  public Boolean isMockMessage() {
    return mockMessage;
  }

  public void setMockMessage(Boolean mockMessage) {
    this.mockMessage = mockMessage;
  }

  public ModelsWMessage mockTimeShift(Long mockTimeShift) {
    this.mockTimeShift = mockTimeShift;
    return this;
  }

   /**
   * Get mockTimeShift
   * @return mockTimeShift
  **/
  @ApiModelProperty(value = "")
  public Long getMockTimeShift() {
    return mockTimeShift;
  }

  public void setMockTimeShift(Long mockTimeShift) {
    this.mockTimeShift = mockTimeShift;
  }

  public ModelsWMessage smTPCode(Long smTPCode) {
    this.smTPCode = smTPCode;
    return this;
  }

   /**
   * Get smTPCode
   * @return smTPCode
  **/
  @ApiModelProperty(value = "")
  public Long getSmTPCode() {
    return smTPCode;
  }

  public void setSmTPCode(Long smTPCode) {
    this.smTPCode = smTPCode;
  }

  public ModelsWMessage smTPDescription(String smTPDescription) {
    this.smTPDescription = smTPDescription;
    return this;
  }

   /**
   * Get smTPDescription
   * @return smTPDescription
  **/
  @ApiModelProperty(value = "")
  public String getSmTPDescription() {
    return smTPDescription;
  }

  public void setSmTPDescription(String smTPDescription) {
    this.smTPDescription = smTPDescription;
  }

  public ModelsWMessage subAccountID(Long subAccountID) {
    this.subAccountID = subAccountID;
    return this;
  }

   /**
   * Get subAccountID
   * @return subAccountID
  **/
  @ApiModelProperty(value = "")
  public Long getSubAccountID() {
    return subAccountID;
  }

  public void setSubAccountID(Long subAccountID) {
    this.subAccountID = subAccountID;
  }

  public ModelsWMessage to(String to) {
    this.to = to;
    return this;
  }

   /**
   * Get to
   * @return to
  **/
  @ApiModelProperty(value = "")
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }

  public ModelsWMessage type(ModelsEventType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public ModelsEventType getType() {
    return type;
  }

  public void setType(ModelsEventType type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsWMessage modelsWMessage = (ModelsWMessage) o;
    return Objects.equals(this.accountID, modelsWMessage.accountID) &&
        Objects.equals(this.groups, modelsWMessage.groups) &&
        Objects.equals(this.IPID, modelsWMessage.IPID) &&
        Objects.equals(this.messageType, modelsWMessage.messageType) &&
        Objects.equals(this.messageUUID, modelsWMessage.messageUUID) &&
        Objects.equals(this.mockMessage, modelsWMessage.mockMessage) &&
        Objects.equals(this.mockTimeShift, modelsWMessage.mockTimeShift) &&
        Objects.equals(this.smTPCode, modelsWMessage.smTPCode) &&
        Objects.equals(this.smTPDescription, modelsWMessage.smTPDescription) &&
        Objects.equals(this.subAccountID, modelsWMessage.subAccountID) &&
        Objects.equals(this.to, modelsWMessage.to) &&
        Objects.equals(this.type, modelsWMessage.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountID, groups, IPID, messageType, messageUUID, mockMessage, mockTimeShift, smTPCode, smTPDescription, subAccountID, to, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsWMessage {\n");
    
    sb.append("    accountID: ").append(toIndentedString(accountID)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    IPID: ").append(toIndentedString(IPID)).append("\n");
    sb.append("    messageType: ").append(toIndentedString(messageType)).append("\n");
    sb.append("    messageUUID: ").append(toIndentedString(messageUUID)).append("\n");
    sb.append("    mockMessage: ").append(toIndentedString(mockMessage)).append("\n");
    sb.append("    mockTimeShift: ").append(toIndentedString(mockTimeShift)).append("\n");
    sb.append("    smTPCode: ").append(toIndentedString(smTPCode)).append("\n");
    sb.append("    smTPDescription: ").append(toIndentedString(smTPDescription)).append("\n");
    sb.append("    subAccountID: ").append(toIndentedString(subAccountID)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

