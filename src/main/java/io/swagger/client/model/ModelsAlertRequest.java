/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ModelsAlertLabel;
import io.swagger.client.model.ModelsNotificationType;
import java.io.IOException;

/**
 * ModelsAlertRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-06T12:27:02.903Z")



public class ModelsAlertRequest {
  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("emails")
  private Object emails = null;

  @SerializedName("entityType")
  private String entityType = null;

  @SerializedName("entityValue")
  private Long entityValue = null;

  @SerializedName("label")
  private ModelsAlertLabel label = null;

  @SerializedName("member")
  private Long member = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("notificationType")
  private ModelsNotificationType notificationType = null;

  @SerializedName("parameter")
  private Long parameter = null;

  @SerializedName("provider")
  private String provider = null;

  @SerializedName("slackUrl")
  private String slackUrl = null;

  @SerializedName("threshold")
  private String threshold = null;

  public ModelsAlertRequest active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public ModelsAlertRequest emails(Object emails) {
    this.emails = emails;
    return this;
  }

   /**
   * Get emails
   * @return emails
  **/
  @ApiModelProperty(value = "")
  public Object getEmails() {
    return emails;
  }

  public void setEmails(Object emails) {
    this.emails = emails;
  }

  public ModelsAlertRequest entityType(String entityType) {
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @ApiModelProperty(value = "")
  public String getEntityType() {
    return entityType;
  }

  public void setEntityType(String entityType) {
    this.entityType = entityType;
  }

  public ModelsAlertRequest entityValue(Long entityValue) {
    this.entityValue = entityValue;
    return this;
  }

   /**
   * Get entityValue
   * @return entityValue
  **/
  @ApiModelProperty(value = "")
  public Long getEntityValue() {
    return entityValue;
  }

  public void setEntityValue(Long entityValue) {
    this.entityValue = entityValue;
  }

  public ModelsAlertRequest label(ModelsAlertLabel label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @ApiModelProperty(value = "")
  public ModelsAlertLabel getLabel() {
    return label;
  }

  public void setLabel(ModelsAlertLabel label) {
    this.label = label;
  }

  public ModelsAlertRequest member(Long member) {
    this.member = member;
    return this;
  }

   /**
   * Get member
   * @return member
  **/
  @ApiModelProperty(value = "")
  public Long getMember() {
    return member;
  }

  public void setMember(Long member) {
    this.member = member;
  }

  public ModelsAlertRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ModelsAlertRequest notificationType(ModelsNotificationType notificationType) {
    this.notificationType = notificationType;
    return this;
  }

   /**
   * Get notificationType
   * @return notificationType
  **/
  @ApiModelProperty(value = "")
  public ModelsNotificationType getNotificationType() {
    return notificationType;
  }

  public void setNotificationType(ModelsNotificationType notificationType) {
    this.notificationType = notificationType;
  }

  public ModelsAlertRequest parameter(Long parameter) {
    this.parameter = parameter;
    return this;
  }

   /**
   * Get parameter
   * @return parameter
  **/
  @ApiModelProperty(value = "")
  public Long getParameter() {
    return parameter;
  }

  public void setParameter(Long parameter) {
    this.parameter = parameter;
  }

  public ModelsAlertRequest provider(String provider) {
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @ApiModelProperty(value = "")
  public String getProvider() {
    return provider;
  }

  public void setProvider(String provider) {
    this.provider = provider;
  }

  public ModelsAlertRequest slackUrl(String slackUrl) {
    this.slackUrl = slackUrl;
    return this;
  }

   /**
   * Get slackUrl
   * @return slackUrl
  **/
  @ApiModelProperty(value = "")
  public String getSlackUrl() {
    return slackUrl;
  }

  public void setSlackUrl(String slackUrl) {
    this.slackUrl = slackUrl;
  }

  public ModelsAlertRequest threshold(String threshold) {
    this.threshold = threshold;
    return this;
  }

   /**
   * Get threshold
   * @return threshold
  **/
  @ApiModelProperty(value = "")
  public String getThreshold() {
    return threshold;
  }

  public void setThreshold(String threshold) {
    this.threshold = threshold;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsAlertRequest modelsAlertRequest = (ModelsAlertRequest) o;
    return Objects.equals(this.active, modelsAlertRequest.active) &&
        Objects.equals(this.emails, modelsAlertRequest.emails) &&
        Objects.equals(this.entityType, modelsAlertRequest.entityType) &&
        Objects.equals(this.entityValue, modelsAlertRequest.entityValue) &&
        Objects.equals(this.label, modelsAlertRequest.label) &&
        Objects.equals(this.member, modelsAlertRequest.member) &&
        Objects.equals(this.name, modelsAlertRequest.name) &&
        Objects.equals(this.notificationType, modelsAlertRequest.notificationType) &&
        Objects.equals(this.parameter, modelsAlertRequest.parameter) &&
        Objects.equals(this.provider, modelsAlertRequest.provider) &&
        Objects.equals(this.slackUrl, modelsAlertRequest.slackUrl) &&
        Objects.equals(this.threshold, modelsAlertRequest.threshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, emails, entityType, entityValue, label, member, name, notificationType, parameter, provider, slackUrl, threshold);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsAlertRequest {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    entityValue: ").append(toIndentedString(entityValue)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    member: ").append(toIndentedString(member)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notificationType: ").append(toIndentedString(notificationType)).append("\n");
    sb.append("    parameter: ").append(toIndentedString(parameter)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    slackUrl: ").append(toIndentedString(slackUrl)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

