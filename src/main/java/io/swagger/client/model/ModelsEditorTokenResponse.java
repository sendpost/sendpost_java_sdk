/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ModelsEditorTokenResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-27T05:08:14.940Z")



public class ModelsEditorTokenResponse {
  @SerializedName(".expires")
  private String expires = null;

  @SerializedName(".issued")
  private String issued = null;

  @SerializedName("access_token")
  private String accessToken = null;

  @SerializedName("as:client_id")
  private String asclientId = null;

  @SerializedName("as:region")
  private String asregion = null;

  @SerializedName("expires_in")
  private Integer expiresIn = null;

  @SerializedName("refresh_token")
  private String refreshToken = null;

  @SerializedName("token_type")
  private String tokenType = null;

  @SerializedName("userName")
  private String userName = null;

  public ModelsEditorTokenResponse expires(String expires) {
    this.expires = expires;
    return this;
  }

   /**
   * Get expires
   * @return expires
  **/
  @ApiModelProperty(value = "")
  public String getExpires() {
    return expires;
  }

  public void setExpires(String expires) {
    this.expires = expires;
  }

  public ModelsEditorTokenResponse issued(String issued) {
    this.issued = issued;
    return this;
  }

   /**
   * Get issued
   * @return issued
  **/
  @ApiModelProperty(value = "")
  public String getIssued() {
    return issued;
  }

  public void setIssued(String issued) {
    this.issued = issued;
  }

  public ModelsEditorTokenResponse accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * Get accessToken
   * @return accessToken
  **/
  @ApiModelProperty(value = "")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  public ModelsEditorTokenResponse asclientId(String asclientId) {
    this.asclientId = asclientId;
    return this;
  }

   /**
   * Get asclientId
   * @return asclientId
  **/
  @ApiModelProperty(value = "")
  public String getAsclientId() {
    return asclientId;
  }

  public void setAsclientId(String asclientId) {
    this.asclientId = asclientId;
  }

  public ModelsEditorTokenResponse asregion(String asregion) {
    this.asregion = asregion;
    return this;
  }

   /**
   * Get asregion
   * @return asregion
  **/
  @ApiModelProperty(value = "")
  public String getAsregion() {
    return asregion;
  }

  public void setAsregion(String asregion) {
    this.asregion = asregion;
  }

  public ModelsEditorTokenResponse expiresIn(Integer expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

   /**
   * Get expiresIn
   * @return expiresIn
  **/
  @ApiModelProperty(value = "")
  public Integer getExpiresIn() {
    return expiresIn;
  }

  public void setExpiresIn(Integer expiresIn) {
    this.expiresIn = expiresIn;
  }

  public ModelsEditorTokenResponse refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * Get refreshToken
   * @return refreshToken
  **/
  @ApiModelProperty(value = "")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public ModelsEditorTokenResponse tokenType(String tokenType) {
    this.tokenType = tokenType;
    return this;
  }

   /**
   * Get tokenType
   * @return tokenType
  **/
  @ApiModelProperty(value = "")
  public String getTokenType() {
    return tokenType;
  }

  public void setTokenType(String tokenType) {
    this.tokenType = tokenType;
  }

  public ModelsEditorTokenResponse userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @ApiModelProperty(value = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsEditorTokenResponse modelsEditorTokenResponse = (ModelsEditorTokenResponse) o;
    return Objects.equals(this.expires, modelsEditorTokenResponse.expires) &&
        Objects.equals(this.issued, modelsEditorTokenResponse.issued) &&
        Objects.equals(this.accessToken, modelsEditorTokenResponse.accessToken) &&
        Objects.equals(this.asclientId, modelsEditorTokenResponse.asclientId) &&
        Objects.equals(this.asregion, modelsEditorTokenResponse.asregion) &&
        Objects.equals(this.expiresIn, modelsEditorTokenResponse.expiresIn) &&
        Objects.equals(this.refreshToken, modelsEditorTokenResponse.refreshToken) &&
        Objects.equals(this.tokenType, modelsEditorTokenResponse.tokenType) &&
        Objects.equals(this.userName, modelsEditorTokenResponse.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expires, issued, accessToken, asclientId, asregion, expiresIn, refreshToken, tokenType, userName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsEditorTokenResponse {\n");
    
    sb.append("    expires: ").append(toIndentedString(expires)).append("\n");
    sb.append("    issued: ").append(toIndentedString(issued)).append("\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    asclientId: ").append(toIndentedString(asclientId)).append("\n");
    sb.append("    asregion: ").append(toIndentedString(asregion)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

